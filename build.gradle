import org.apache.tools.ant.filters.ReplaceTokens

buildscript {
	ext {
		springBootVersion = '2.5.3'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
plugins {
	id 'maven-publish'
	id 'eclipse'
	id "org.springframework.boot" version "2.5.3"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

repositories {

	mavenCentral()
	maven{
		url "https://plugins.gradle.org/ms2/"
	}

}

group = 'com.ecirstea.multimedia'
version = '0.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

apply from: "${project.projectDir}/src/main/resources/properties.gradle"

def currentProfile = 'LOCAL'

if (project.hasProperty('profile')) {
	currentProfile = project.properties['profile'].toString().toUpperCase()
}

println("Current Profile is ${currentProfile}")
def currentSpringProperties = project.springPropertiesContainer[currentProfile]

currentSpringProperties['destinationEnvironment'] = currentProfile

publishing {
	publications {
		mavenJava(MavenPublication) { from components.java }
	}
}
processResources {
	from('src/main/resources') {
		include 'application.properties'
		filter(ReplaceTokens, tokens: currentSpringProperties)
		setDuplicatesStrategy(DuplicatesStrategy.INCLUDE)
	}

}

jar {
	enabled = true
}



configurations.all {
	resolutionStrategy.cacheChangingModulesFor 0, 'seconds'

}


bootJar {
	baseName = rootProject.name

}
ext {
	set('springCloudVersion', "2020.0.3")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.threeten', name: 'threetenbp', version: '1.5.1'
	implementation group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.4.1'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.12.2'
	implementation 'com.github.joschi.jackson:jackson-datatype-threetenbp:2.8.4'
	implementation group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.4.1'
	implementation("com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4")
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.6.0'
	implementation group: 'commons-net', name: 'commons-net', version: '3.8.0'
	implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

test {
	useJUnitPlatform()
}
