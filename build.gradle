buildscript {
	ext {
		springBootVersion = '2.3.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}
plugins {
	id 'org.springframework.boot' version '2.5.3'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
group = 'com.ecirstea'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}


group = 'com.ecirstea.multimedia'
version = '0.0.1'
sourceCompatibility = 1.8
targetCompatibility = 1.8

apply from: "${project.projectDir}/src/main/resources/properties.gradle"

def currentProfile = 'LOCAL';

if (project.hasProperty('profile')) {
	currentProfile = project.properties['profile'].toString().toUpperCase();
}

println("Current Profile is ${currentProfile}")
def currentSpringProperties = project.springPropertiesContainer[currentProfile]

if (currentSpringProperties == null) {
	def out = services.get(StyledTextOutputFactory).create("my-factory")
	out.withStyle(StyledTextOutput.Style.FailureHeader).println("No Spring properties found for profile ${project.properties['profile']}")
}
currentSpringProperties['destinationEnvironment'] = currentProfile;



dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation group: 'org.threeten', name: 'threetenbp', version: '1.5.1'
	implementation group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.4.1'
	implementation group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2'
	implementation group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.12.2'
	implementation 'com.github.joschi.jackson:jackson-datatype-threetenbp:2.8.4'
	implementation group: 'com.github.joschi.jackson', name: 'jackson-datatype-threetenbp', version: '2.4.1'
	implementation("com.github.joschi.jackson:jackson-datatype-threetenbp:2.6.4")
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.6.0'

}

test {
	useJUnitPlatform()
}
